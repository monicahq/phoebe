jobs:
- job: build
  pool:
    vmImage: 'macOS-10.15'

  variables:
    GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle
    SONAR_ORGANIZATION: 'monicahq'
    SONAR_PROJECT_KEY: 'monicahq_phoebe'
    SONAR_PROJECT_NAME: 'phoebe'

  steps:
  - task: Cache@2
    displayName: Gradle build cache
    inputs:
      key: 'gradle-v1 | "$(Agent.OS)"'
      restoreKeys: |
        gradle-v1
      path: $(GRADLE_USER_HOME)

  - task: Gradle@2
    displayName: 'gradlew check'
    inputs:
      tasks: 'check'
      publishJUnitResults: false
      workingDirectory: ''
      gradleWrapperFile: '$(gradleWrapperFile)'

  - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
    displayName: 'Prepare analysis on SonarCloud'
    inputs:
      SonarCloud: Sonarcloud
      organization: $(SONAR_ORGANIZATION)
      scannerMode: CLI
      configMode: manual
      cliProjectKey: '$(SONAR_PROJECT_KEY)'
      cliProjectName: '$(SONAR_PROJECT_NAME)'
      extraProperties: |
        sonar.coverage.jacoco.xmlReportPaths=app/build/reports/coverage/debug/report.xml
        sonar.junit.reportPaths=app/build/test-results/testDebugUnitTest,app/build/outputs/androidTest-results/connected
        sonar.links.homepage=https://monicahq.com
        sonar.links.ci=https://dev.azure.com/monicahq/phoebe
        sonar.links.scm=https://github.com/monicahq/phoebe
        sonar.links.issue=https://github.com/monicahq/phoebe/issues

  - task: Gradle@2
    displayName: 'gradlew build'
    inputs:
      tasks: 'assembleDebug testDebugUnitTest'
      workingDirectory: ''
      gradleWrapperFile: '$(gradleWrapperFile)'
      gradleOptions: '-Xmx1024m'
      options: '--build-cache'
      jdkVersionOption: '$(jdkVersionOption)'
      publishJUnitResults: true
      checkStyleRunAnalysis: true
      pmdRunAnalysis: true

  - bash: |
      # Install AVD files
      echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-29;google_apis;x86'

      # Create emulator
      echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n android_emulator -k 'system-images;android-29;google_apis;x86' --force

      $ANDROID_HOME/emulator/emulator -list-avds

      echo "Starting emulator"

      # Start emulator in background
      nohup $ANDROID_HOME/emulator/emulator -avd android_emulator -no-snapshot > /dev/null 2>&1 &
      $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'

      $ANDROID_HOME/platform-tools/adb devices

      echo "Emulator started"
    displayName: 'start emulator'

  - task: Gradle@2
    displayName: 'gradlew test coverage'
    inputs:
      tasks: 'createDebugCoverageReport'
      workingDirectory: ''
      gradleWrapperFile: '$(gradleWrapperFile)'
      gradleOptions: '-Xmx2048m'
      jdkVersionOption: '$(jdkVersionOption)'
      publishJUnitResults: false

  - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
    displayName: 'Run Code Analysis'

  - task: Gradle@2
    displayName: 'gradlew release build'
    inputs:
      tasks: 'assembleRelease'
      workingDirectory: ''
      gradleWrapperFile: '$(gradleWrapperFile)'
      gradleOptions: '-Xmx1024m'
      options: '--build-cache'
      jdkVersionOption: '$(jdkVersionOption)'
      publishJUnitResults: false

  - task: AndroidSigning@2
    inputs:
      apkFiles: '**/*.apk'
      jarsign: true
      jarsignerKeystoreFile: '$(monica.SecureFile)'
      jarsignerKeystorePassword: '$(monica.store)'
      jarsignerKeystoreAlias: '$(monica.KeystoreAlias)'
      jarsignerKeyPassword: '$(monica.key)'
      zipalign: true

  - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
    displayName: 'Publish Quality Gate Result'
    condition: succeededOrFailed()

  - task: CopyFiles@2
    inputs:
      contents: '**/*.apk'
      targetFolder: '$(build.artifactStagingDirectory)'
    displayName: Copy .apk files to artifact staging directory
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(build.artifactStagingDirectory)'
      artifactName: 'drop'
      artifactType: 'container'
    displayName: Publish artifacts
    condition: succeededOrFailed()

  - publish: $(System.DefaultWorkingDirectory)/app/build/reports
    artifact: 'reports'
    condition: succeededOrFailed()

  # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
  - script: |
      ./gradlew --stop
    displayName: Gradle stop
    condition: succeededOrFailed()
